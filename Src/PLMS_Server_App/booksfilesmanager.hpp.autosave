#ifndef BOOKSFILESMANAGER_HPP
#define BOOKSFILESMANAGER_HPP

// ------------------ Macros --------------------------------------------
#define BOOKS_FILE_NAME (QString("books"))
#define BOOKS_FILE_BACKUP_NAME (QString("booksBU"))
#define TEMP_FILE_NAME (QString("tempB"))
#define BOOKS_FILE_OPEN_ERROR_TEXT (QString("-----------!!! Błąd otwarcia pliku \"books\" !!! -------------"))
#define TEMP_FILE_OPEN_ERROR_TEXT (QString("-----------!!! Błąd otwarcia pliku \"tempB\" !!! -------------"))

// Include macros

// ----------------------------------------------------------------------

// ------------------ Includes ------------------------------------------
#include<stdint.h>
#include"bookparameters.hpp"
// ----------------------------------------------------------------------

// ------------------ Predefinitions ------------------------------------
class App;
class User;
class QFile;
class ReadFileRules;
class QString;
class MyTcpSocket;
// ----------------------------------------------------------------------

// ------------------ App Class -----------------------------------------

class ClientsFilesMenager{

public:
    // Constructor
    ClientsFilesMenager(App*);

    // Destructor
    ~ClientsFilesMenager();

private:

    // Parent
    App* parent = nullptr;

    // Actual TcpSocket
    MyTcpSocket* actualSocket = nullptr;

    bool createClientsFile();
    bool createClientsFileBackUp();
    uint8_t restoreClientsFile();
    void clearMemory();
    bool readNextClient(User&, QFile&);
    bool writeNextClient(User&, QFile&);
    UserParameters checkUserParameters(QString&);

public:
    void addEditRemoveClient(MyTcpSocket* newActualSocket);
    void readClients(MyTcpSocket* newActualSocket);

private:
    bool readClientsFile(ReadFileRules& rules);
    bool writeClientsFile();

};

#endif // BOOKSFILESMANAGER_HPP
